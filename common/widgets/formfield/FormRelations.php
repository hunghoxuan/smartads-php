<?php
namespace common\widgets\formfield;

use common\components\FHtml;
use common\widgets\FActiveForm;
use kartik\form\ActiveFormAsset;
use yii\helpers\ArrayHelper;
use yii\helpers\BaseInflector;

class FormRelations extends FormFieldWidget
{
    function init()
    {
        if (empty($this->_attribute))
            $this->_attribute = BaseInflector::camelize($this->object_type);

        if (!empty($this->object_fields))
        {
            $fields1 = [];
            $attributes1 = [];

            if (!empty($this->object_fields)) {
                foreach ($this->object_fields as $key => $value) {
                    if (is_numeric($key)) {
                        if (is_string($value)) {
                            $key = $value;
                        } else if (is_array($value)) {
                            $key = FHtml::getFieldValue($value, 'attribute');
                            //$value = ['value' => FHtml::getFieldValue($value, 'value'), 'columnOptions' => ['colspan' => 1], 'type' => FHtml::INPUT_RAW];
                        }
                    } else {
                        if (is_array($value)) {
                            //$value = ['value' => FHtml::getFieldValue($value, 'value'), 'columnOptions' => ['colspan' => 1], 'type' => FHtml::INPUT_RAW];
                        }
                        else if (is_string($value)) {
                           // $value = ['value' => $related_form->fieldNoLabel($related_model, $key)->editor($value), 'columnOptions' => ['colspan' => 1], 'type' => FHtml::INPUT_RAW];

                        } else {
                            //$value = ['value' => $value, 'columnOptions' => ['colspan' => 1], 'type' => FHtml::INPUT_RAW];
                        }
                    }
                    $fields1[] = $key;
                    $attributes1 = array_merge($attributes1, [$key => $value]);
                }
            } else {
                $this->object_fields = null;
            }

            $this->object_fields = $fields1;

            //$this->object_attributes = $attributes1;
        }

        parent::init(); // TODO: Change the autogenerated stub
    }

    public function run()
    {
       if (empty($this->view_path)) {
            if (empty($this->relation_type)) {
                if (FHtml::field_exists($this->object_type, 'object_id')) {
                    $this->view_path = '_form_relations_one_many';
                    $this->relation_type = 'object_id';
                } else {
                    $this->view_path = '_form_relations_many_many';
                }
            } else if (FHtml::field_exists($this->object_type, $this->relation_type)) {
                $this->view_path = '_form_relations_one_many';
            } else {
                $this->view_path = '_form_relations_many_many';
            }
        }
        return parent::run();
    }

    protected function prepareData()
    {
        parent::prepareData();
    }
}

?>