<?php
/**
 * Created by PhpStorm.
 * User: LongPC
 * Date: 10/15/2018
 * Time: 17:14
 */

namespace common\widgets;
use common\components\FHtml;


/**
 * Class FDashboard
 * @package common\widgets
 */
class FDashboard extends BaseWidget
{
    const TYPE_CHART = 'chart';
    const TYPE_STATISTIC = 'statistic';

	/**
	 * @var string
	 */
	public $type = '';
	/**
	 * @var string
	 */
	public $table = '';
	/**
	 * @var string
	 */
	public $module = '';

	/**
	 * @return string
	 */
	public function run() {
	    if (empty($this->module)) {
            $this->module = FHtml::currentApplicationId();
        }
        $root_folder = FHtml::getRootFolder();
	    $module = $this->getModule();
	    $table = $this->getTable();

        if (empty($this->type) && is_file("$root_folder/backend/modules/$module/views/default/index.php"))
        {
            return FHtml::render("@backend/modules/$module/views/default/index.php");
        }

		if (empty($table) && !empty($module)) {
            $this->setModule("\\backend\\modules\\" . $this->getModule() . "\\Dashboard" );
			if (class_exists($this->getModule())) {
				return call_user_func([$this->getModule(), 'render']);
			}
		}

		return parent::run(); // TODO: Change the autogenerated stub
	}

	/**
	 * @param       $view
	 * @param array $params
	 * @param bool  $widgetRender
	 * @return string
	 */
	public function render($view, $params = [], $widgetRender = true) {
		return parent::render($view, $params, $widgetRender); // TODO: Change the autogenerated stub
	}

	/**
	 * @return string
	 */
	public function getTable() {
		return $this->table;
	}

	/**
	 * @param string $table
	 */
	public function setTable($table) {
		$this->table = $table;
	}

	/**
	 * @return string
	 */
	public function getModule() {
		return $this->module;
	}

	/**
	 * @param string $module
	 */
	public function setModule($module) {
		$this->module = $module;
	}

	/**
	 * @return string
	 */
	public function getType() {
		return $this->type;
	}

	/**
	 * @param string $type
	 */
	public function setType($type) {
		$this->type = $type;
	}
}