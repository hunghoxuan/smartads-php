<?php
namespace common\components;

use yii\db\Query;

class FQuery extends Query
{
	public function createCommand($db = null)
    {
        if ($db === null) {
            $db = FHtml::currentDB();
        }
        list ($sql, $params) = $db->getQueryBuilder()->build($this);

        return $db->createCommand($sql, $params);
    }

//    public function all($db = null)
//    {
//        // ALready set in function FModel::buildQueryModel
//        if (FHtml::isApplicationsEnabled() && FHtml::field_exists($this->getTableName(), 'application_id'))
//            $this->andWhere(['application_id' => FHtml::currentApplicationCode()]);
//
//        //if select only some fields then make sure include primary key - id in selected fields (used in get TranslatedModels)
//        $id_field = isset($this->primaryModel) ? $this->primaryModel->getPrimaryKey() : 'id';
//
//        if (is_array($this->select) && !empty($this->select))
//            $this->select = array_merge($this->select, [$id_field]);
//        else if (is_string($this->select) && !empty($this->select))
//            $this->select = $this->select . ',' . $id_field;
//
//        $items = parent::all($db);
//
//        $items = FHtml::getTranslatedModels($items);
//
//        return $items;
//    }

    public function getTableName()
    {
        $query = $this;
        if (empty($query->from)) {
            /* @var $modelClass ActiveRecord */
            $modelClass = $query->modelClass;
            $tableName = $modelClass::tableName();
        } else {
            $tableName = '';
            foreach ($query->from as $alias => $tableName) {
                if (is_string($alias)) {
                    return $tableName;
                } else {
                    break;
                }
            }
        }

        return $tableName;
    }

    public function one($db = null)
    {

        //if select only some fields then make sure include primary key - id in selected fields (used in get TranslatedModels)
	    // khong can thiet
//        $id_field = isset($this->primaryModel) ? $this->primaryModel->getPrimaryKey() : 'id';
//        if (is_array($this->select) && !empty($this->select))
//            $this->select = array_merge($this->select, [$id_field]);
//        else if (is_string($this->select) && !empty($this->select))
//            $this->select = $this->select . ',' . $id_field;

        $item = parent::one($db); // TODO: Change the autogenerated stub
        return FHtml::getTranslatedModel($item);
    }

}