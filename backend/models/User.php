<?php

namespace backend\models;

use Yii;
use common\components\FHtml;
use common\components\FModel;
use yii\helpers\ArrayHelper;

/*This is the customized model class for table "user".
 */

class User extends UserBase //\yii\db\ActiveRecord
{

    const LOOKUP = [
        'role' => [
            ['id' => User::ROLE_ADMIN, 'name' => 'ADMIN'],
        ],
        'status' => [
            ['id' => User::STATUS_DISABLED, 'name' => 'DISABLED'],
            ['id' => User::STATUS_ACTIVE, 'name' => 'ACTIVE'],
        ],
    ];

    const COLUMNS_UPLOAD = ['image',];

    public $order_by = '';

    const OBJECTS_RELATED = [];
    const OBJECTS_META = [];

    public function getUniqueFields()
    {
        return ['username', 'email', 'password_reset_token'];
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [

            [['id', 'code', 'name', 'username', 'image', 'overview', 'content', 'auth_key', 'password_hash', 'password_reset_token', 'birth_date', 'birth_place', 'gender', 'identity_card', 'email', 'phone', 'skype', 'address', 'city', 'organization', 'department', 'position', 'start_date', 'end_date', 'role', 'type', 'status', 'is_online', 'last_login', 'last_logout', 'created_at', 'updated_at', 'application_id'], 'filter', 'filter' => 'trim'],
            [['name'], 'required'],
            [['content'], 'string'],
            [['birth_date', 'start_date', 'end_date', 'last_login', 'last_logout'], 'safe'],
            [['role', 'status', 'is_online', 'created_at', 'updated_at'], 'integer'],
            [['code', 'name', 'username', 'password_hash', 'password_reset_token', 'birth_place', 'identity_card', 'email', 'phone', 'skype'], 'string', 'max' => 255],
            [['image'], 'string', 'max' => 300],
            [['overview', 'address'], 'string', 'max' => 2000],
            [['auth_key'], 'string', 'max' => 32],
            [['gender', 'city', 'organization', 'department', 'position', 'type', 'application_id'], 'string', 'max' => 100],
        ];
    }

    public function prepareCustomFields()
    {
        parent::prepareCustomFields();
    }

    public static function getRelatedObjects()
    {
        return self::OBJECTS_RELATED;
    }

    public static function getMetaObjects()
    {
        return self::OBJECTS_META;
    }

    public function getChannelId()
    {
        return $this->getManyIdArrays('channel');
    }

    public function getDeviceId()
    {
        return $this->getManyIdArrays('device');
    }

    public function beforeSave($insert)
    {
        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        if (isset($_POST['User'])) {
            $userPost = $_POST['User'];
            if (key_exists('channel_id', $userPost)) {
                $this->saveMany('channel', $userPost['channel_id']);
            }

            if (key_exists('device_id', $userPost)) {
                $this->saveMany('device', $userPost['device_id']);
            }
            $this->content = json_encode(
                [
                    'channel_id' => $_POST['User']['channel_id'],
                    'device_id' => $_POST['User']['device_id']
                ]
            );
        }

        return parent::afterSave($insert, $changedAttributes); // TODO: Change the autogenerated stub
    }
}
